import ffi, C from "sys.ffi"

class Date

   function self(time = C::time(null))
      clock = ffi::new('time_t[1]', time)
      self.tm = C::localtime(clock)
   end

   local iso8601 = '%Y-%m-%dT%H:%M:%S%z'
   function format(fmt = iso8601, len = 256)
      buf = ffi::new('char[?]', len)
      C::strftime(buf, len, fmt, self.tm)
      return ffi::string(buf)
   end

   local ts_clk = ffi::new('time_t[1]')
   local ts_buf = ffi::new('char[256]')
   function self::timestamp(fmt = iso8601)
      ts_clk[0] = C::time(null)
      tm = C::localtime(ts_clk)
      C::strftime(ts_buf, 256, fmt, tm)
      return ffi::string(ts_buf)
   end

   function parse(str is String, fmt = iso8601)
      tm = ffi::new('tm_t')
      C::strptime(str, fmt, tm)
      self.tm = tm
   end
end

module Clock
   local now = ffi::new("timeval_t")

   function gettime()
      C::gettimeofday(now, nil)
      return tonumber(now.tv_sec) * 1000 + tonumber(now.tv_usec) / 1000
   end
end

